<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<32, true>::ssdm_int(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="to_uint64" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<64, true>::ap_range_ref(ap_int_base<64, true>*, int, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<64>::ap_int(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<64, true>::ssdm_int(long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<64, true>::operator==<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<64, true>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="dma_ps.cpp" line="47" pragmaType="pipeline" parentfunction="matmul" off="0" ii="1" rewind="0" style=""/>
<pragma file="dma_ps.cpp" line="53" pragmaType="pipeline" parentfunction="matmul" off="0" ii="1" rewind="0" style=""/>
<pragma file="dma_ps.cpp" line="57" pragmaType="unroll" parentfunction="matmul" factor="-1" skip_exit_check="0"/>
<pragma file="dma_ps.cpp" line="25" pragmaType="array_partition" parentfunction="matmul" dim="0" factor="0" mode="complete" dynamic="0" variable="AB_block"/>
<pragma file="dma_ps.cpp" line="26" pragmaType="array_partition" parentfunction="matmul" dim="1" factor="0" mode="complete" dynamic="0" variable="B_line"/>
<pragma file="dma_ps.cpp" line="86" pragmaType="pipeline" parentfunction="acti_proc" off="1" ii="0" rewind="0" style=""/>
<pragma file="dma_ps.cpp" line="80" pragmaType="aggregate" parentfunction="acti_proc" compact="3" variable="mem"/>
<pragma file="dma_ps.cpp" line="80" pragmaType="interface" parentfunction="acti_proc" mode="s_axilite" port="" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="dma_ps.cpp" line="81" pragmaType="interface" parentfunction="acti_proc" mode="m_axi" port="mem" bundle="mem" offset="" name="" depth="-1" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="dma_ps.cpp" line="82" pragmaType="interface" parentfunction="acti_proc" mode="m_axi" port="insts" bundle="imem" offset="" name="" depth="-1" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator==<64, true>(ap_int_base<64, true> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="pragma" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="aggregate" parentfunction="pragma" compact="3" variable="this"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="range" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::vector<float, 16ul>::operator[](unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
</pragmas>
