

================================================================
== Vitis HLS Report for 'activ'
================================================================
* Date:           Mon Apr  8 23:46:06 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        dma_ps
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.200 ns|     2.80 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+--------+---------+
    |  Latency (cycles) |  Latency (absolute)  |   Interval   | Pipeline|
    |   min   |   max   |    min    |    max   | min |   max  |   Type  |
    +---------+---------+-----------+----------+-----+--------+---------+
    |        2|   139249|  20.000 ns|  1.392 ms|    2|  139249|       no|
    +---------+---------+-----------+----------+-----+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+----------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  |   Trip   |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  |   Count  | Pipelined|
        +----------+---------+---------+----------+-----------+-----------+----------+----------+
        |- LBB     |        0|   139247|        18|         17|          1|  0 ~ 8191|       yes|
        +----------+---------+---------+----------+-----------+-----------+----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 17, depth = 18


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 18
* Pipeline : 1
  Pipeline-0 : II = 17, D = 18, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.36>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [dma_ps.cpp:5]   --->   Operation 21 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i512 %mem, void @empty_0, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_4, void @empty_3, void @empty_1, i32 16, i32 16, i32 16, i32 16, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 22 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%N_read = read i13 @_ssdm_op_Read.ap_auto.i13, i13 %N" [dma_ps.cpp:3]   --->   Operation 23 'read' 'N_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%wo_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %wo" [dma_ps.cpp:3]   --->   Operation 24 'read' 'wo_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%ro_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %ro" [dma_ps.cpp:3]   --->   Operation 25 'read' 'ro_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%A_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %A" [dma_ps.cpp:3]   --->   Operation 26 'read' 'A_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln15 = zext i16 %ro_read" [dma_ps.cpp:15]   --->   Operation 27 'zext' 'zext_ln15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%wo_cast = zext i16 %wo_read" [dma_ps.cpp:3]   --->   Operation 28 'zext' 'wo_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.42ns)   --->   "%store_ln5 = store i13 0, i13 %i" [dma_ps.cpp:5]   --->   Operation 29 'store' 'store_ln5' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln5 = br void %LAA" [dma_ps.cpp:5]   --->   Operation 30 'br' 'br_ln5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%i_3 = load i13 %i" [dma_ps.cpp:5]   --->   Operation 31 'load' 'i_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.82ns)   --->   "%icmp_ln5 = icmp_eq  i13 %i_3, i13 %N_read" [dma_ps.cpp:5]   --->   Operation 32 'icmp' 'icmp_ln5' <Predicate = true> <Delay = 0.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 0, i64 8191, i64 0"   --->   Operation 33 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.82ns)   --->   "%add_ln5 = add i13 %i_3, i13 1" [dma_ps.cpp:5]   --->   Operation 34 'add' 'add_ln5' <Predicate = true> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln5 = br i1 %icmp_ln5, void %LAA.split, void %for.end15.loopexit" [dma_ps.cpp:5]   --->   Operation 35 'br' 'br_ln5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln8 = zext i13 %i_3" [dma_ps.cpp:8]   --->   Operation 36 'zext' 'zext_ln8' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.85ns)   --->   "%add_ln8 = add i17 %zext_ln8, i17 %zext_ln15" [dma_ps.cpp:8]   --->   Operation 37 'add' 'add_ln8' <Predicate = (!icmp_ln5)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%shl_ln8 = bitconcatenate i23 @_ssdm_op_BitConcatenate.i23.i17.i6, i17 %add_ln8, i6 0" [dma_ps.cpp:8]   --->   Operation 38 'bitconcatenate' 'shl_ln8' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln8_1 = zext i23 %shl_ln8" [dma_ps.cpp:8]   --->   Operation 39 'zext' 'zext_ln8_1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (1.08ns)   --->   "%add_ln8_1 = add i64 %zext_ln8_1, i64 %A_read" [dma_ps.cpp:8]   --->   Operation 40 'add' 'add_ln8_1' <Predicate = (!icmp_ln5)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln8_s = partselect i58 @_ssdm_op_PartSelect.i58.i64.i32.i32, i64 %add_ln8_1, i32 6, i32 63" [dma_ps.cpp:8]   --->   Operation 41 'partselect' 'trunc_ln8_s' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.85ns)   --->   "%add_ln15 = add i17 %zext_ln8, i17 %wo_cast" [dma_ps.cpp:15]   --->   Operation 42 'add' 'add_ln15' <Predicate = (!icmp_ln5)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i23 @_ssdm_op_BitConcatenate.i23.i17.i6, i17 %add_ln15, i6 0" [dma_ps.cpp:15]   --->   Operation 43 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln15_1 = zext i23 %shl_ln" [dma_ps.cpp:15]   --->   Operation 44 'zext' 'zext_ln15_1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (1.08ns)   --->   "%add_ln15_1 = add i64 %zext_ln15_1, i64 %A_read" [dma_ps.cpp:15]   --->   Operation 45 'add' 'add_ln15_1' <Predicate = (!icmp_ln5)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i58 @_ssdm_op_PartSelect.i58.i64.i32.i32, i64 %add_ln15_1, i32 6, i32 63" [dma_ps.cpp:15]   --->   Operation 46 'partselect' 'trunc_ln6' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.42ns)   --->   "%store_ln5 = store i13 %add_ln5, i13 %i" [dma_ps.cpp:5]   --->   Operation 47 'store' 'store_ln5' <Predicate = (!icmp_ln5)> <Delay = 0.42>
ST_1 : Operation 248 [1/1] (0.00ns)   --->   "%ret_ln17 = ret" [dma_ps.cpp:17]   --->   Operation 248 'ret' 'ret_ln17' <Predicate = (icmp_ln5)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.20>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%sext_ln8 = sext i58 %trunc_ln8_s" [dma_ps.cpp:8]   --->   Operation 48 'sext' 'sext_ln8' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i512 %mem, i64 %sext_ln8" [dma_ps.cpp:8]   --->   Operation 49 'getelementptr' 'mem_addr' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_2 : Operation 50 [8/8] (7.20ns)   --->   "%mem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i512P1A, i512 %mem_addr, i32 1" [dma_ps.cpp:8]   --->   Operation 50 'readreq' 'mem_load_req' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.20>
ST_3 : Operation 51 [7/8] (7.20ns)   --->   "%mem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i512P1A, i512 %mem_addr, i32 1" [dma_ps.cpp:8]   --->   Operation 51 'readreq' 'mem_load_req' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.20>
ST_4 : Operation 52 [6/8] (7.20ns)   --->   "%mem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i512P1A, i512 %mem_addr, i32 1" [dma_ps.cpp:8]   --->   Operation 52 'readreq' 'mem_load_req' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.20>
ST_5 : Operation 53 [5/8] (7.20ns)   --->   "%mem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i512P1A, i512 %mem_addr, i32 1" [dma_ps.cpp:8]   --->   Operation 53 'readreq' 'mem_load_req' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.20>
ST_6 : Operation 54 [4/8] (7.20ns)   --->   "%mem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i512P1A, i512 %mem_addr, i32 1" [dma_ps.cpp:8]   --->   Operation 54 'readreq' 'mem_load_req' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.20>
ST_7 : Operation 55 [3/8] (7.20ns)   --->   "%mem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i512P1A, i512 %mem_addr, i32 1" [dma_ps.cpp:8]   --->   Operation 55 'readreq' 'mem_load_req' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.20>
ST_8 : Operation 56 [2/8] (7.20ns)   --->   "%mem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i512P1A, i512 %mem_addr, i32 1" [dma_ps.cpp:8]   --->   Operation 56 'readreq' 'mem_load_req' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.20>
ST_9 : Operation 57 [1/8] (7.20ns)   --->   "%mem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i512P1A, i512 %mem_addr, i32 1" [dma_ps.cpp:8]   --->   Operation 57 'readreq' 'mem_load_req' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.20>
ST_10 : Operation 58 [1/1] (7.20ns)   --->   "%mem_addr_read = read i512 @_ssdm_op_Read.m_axi.i512P1A, i512 %mem_addr" [dma_ps.cpp:8]   --->   Operation 58 'read' 'mem_addr_read' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 59 [1/1] (0.00ns)   --->   "%trunc_ln8 = trunc i512 %mem_addr_read" [dma_ps.cpp:8]   --->   Operation 59 'trunc' 'trunc_ln8' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln8_1 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 32, i32 63" [dma_ps.cpp:8]   --->   Operation 60 'partselect' 'trunc_ln8_1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 61 [1/1] (0.00ns)   --->   "%trunc_ln8_2 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 64, i32 95" [dma_ps.cpp:8]   --->   Operation 61 'partselect' 'trunc_ln8_2' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 62 [1/1] (0.00ns)   --->   "%trunc_ln8_3 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 96, i32 127" [dma_ps.cpp:8]   --->   Operation 62 'partselect' 'trunc_ln8_3' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln8_4 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 128, i32 159" [dma_ps.cpp:8]   --->   Operation 63 'partselect' 'trunc_ln8_4' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln8_5 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 160, i32 191" [dma_ps.cpp:8]   --->   Operation 64 'partselect' 'trunc_ln8_5' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 65 [1/1] (0.00ns)   --->   "%trunc_ln8_6 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 192, i32 223" [dma_ps.cpp:8]   --->   Operation 65 'partselect' 'trunc_ln8_6' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 66 [1/1] (0.00ns)   --->   "%trunc_ln8_7 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 224, i32 255" [dma_ps.cpp:8]   --->   Operation 66 'partselect' 'trunc_ln8_7' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 67 [1/1] (0.00ns)   --->   "%trunc_ln8_8 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 256, i32 287" [dma_ps.cpp:8]   --->   Operation 67 'partselect' 'trunc_ln8_8' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 68 [1/1] (0.00ns)   --->   "%trunc_ln8_9 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 288, i32 319" [dma_ps.cpp:8]   --->   Operation 68 'partselect' 'trunc_ln8_9' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 69 [1/1] (0.00ns)   --->   "%trunc_ln8_10 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 320, i32 351" [dma_ps.cpp:8]   --->   Operation 69 'partselect' 'trunc_ln8_10' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 70 [1/1] (0.00ns)   --->   "%trunc_ln8_11 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 352, i32 383" [dma_ps.cpp:8]   --->   Operation 70 'partselect' 'trunc_ln8_11' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 71 [1/1] (0.00ns)   --->   "%trunc_ln8_12 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 384, i32 415" [dma_ps.cpp:8]   --->   Operation 71 'partselect' 'trunc_ln8_12' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 72 [1/1] (0.00ns)   --->   "%trunc_ln8_13 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 416, i32 447" [dma_ps.cpp:8]   --->   Operation 72 'partselect' 'trunc_ln8_13' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 73 [1/1] (0.00ns)   --->   "%trunc_ln8_14 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 448, i32 479" [dma_ps.cpp:8]   --->   Operation 73 'partselect' 'trunc_ln8_14' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 74 [1/1] (0.00ns)   --->   "%trunc_ln8_15 = partselect i32 @_ssdm_op_PartSelect.i32.i512.i32.i32, i512 %mem_addr_read, i32 480, i32 511" [dma_ps.cpp:8]   --->   Operation 74 'partselect' 'trunc_ln8_15' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 75 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 23, i32 30" [dma_ps.cpp:12]   --->   Operation 75 'partselect' 'tmp' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 76 [1/1] (0.00ns)   --->   "%trunc_ln12 = trunc i512 %mem_addr_read" [dma_ps.cpp:12]   --->   Operation 76 'trunc' 'trunc_ln12' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 55, i32 62" [dma_ps.cpp:12]   --->   Operation 77 'partselect' 'tmp_2' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 78 [1/1] (0.00ns)   --->   "%trunc_ln12_1 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 32, i32 54" [dma_ps.cpp:12]   --->   Operation 78 'partselect' 'trunc_ln12_1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 87, i32 94" [dma_ps.cpp:12]   --->   Operation 79 'partselect' 'tmp_4' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln12_2 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 64, i32 86" [dma_ps.cpp:12]   --->   Operation 80 'partselect' 'trunc_ln12_2' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 119, i32 126" [dma_ps.cpp:12]   --->   Operation 81 'partselect' 'tmp_6' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 82 [1/1] (0.00ns)   --->   "%trunc_ln12_3 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 96, i32 118" [dma_ps.cpp:12]   --->   Operation 82 'partselect' 'trunc_ln12_3' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 151, i32 158" [dma_ps.cpp:12]   --->   Operation 83 'partselect' 'tmp_8' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln12_4 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 128, i32 150" [dma_ps.cpp:12]   --->   Operation 84 'partselect' 'trunc_ln12_4' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_10 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 183, i32 190" [dma_ps.cpp:12]   --->   Operation 85 'partselect' 'tmp_10' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 86 [1/1] (0.00ns)   --->   "%trunc_ln12_5 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 160, i32 182" [dma_ps.cpp:12]   --->   Operation 86 'partselect' 'trunc_ln12_5' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_12 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 215, i32 222" [dma_ps.cpp:12]   --->   Operation 87 'partselect' 'tmp_12' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 88 [1/1] (0.00ns)   --->   "%trunc_ln12_6 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 192, i32 214" [dma_ps.cpp:12]   --->   Operation 88 'partselect' 'trunc_ln12_6' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_14 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 247, i32 254" [dma_ps.cpp:12]   --->   Operation 89 'partselect' 'tmp_14' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 90 [1/1] (0.00ns)   --->   "%trunc_ln12_7 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 224, i32 246" [dma_ps.cpp:12]   --->   Operation 90 'partselect' 'trunc_ln12_7' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_16 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 279, i32 286" [dma_ps.cpp:12]   --->   Operation 91 'partselect' 'tmp_16' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 92 [1/1] (0.00ns)   --->   "%trunc_ln12_8 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 256, i32 278" [dma_ps.cpp:12]   --->   Operation 92 'partselect' 'trunc_ln12_8' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_18 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 311, i32 318" [dma_ps.cpp:12]   --->   Operation 93 'partselect' 'tmp_18' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 94 [1/1] (0.00ns)   --->   "%trunc_ln12_9 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 288, i32 310" [dma_ps.cpp:12]   --->   Operation 94 'partselect' 'trunc_ln12_9' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_20 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 343, i32 350" [dma_ps.cpp:12]   --->   Operation 95 'partselect' 'tmp_20' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 96 [1/1] (0.00ns)   --->   "%trunc_ln12_s = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 320, i32 342" [dma_ps.cpp:12]   --->   Operation 96 'partselect' 'trunc_ln12_s' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_22 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 375, i32 382" [dma_ps.cpp:12]   --->   Operation 97 'partselect' 'tmp_22' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 98 [1/1] (0.00ns)   --->   "%trunc_ln12_10 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 352, i32 374" [dma_ps.cpp:12]   --->   Operation 98 'partselect' 'trunc_ln12_10' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_24 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 407, i32 414" [dma_ps.cpp:12]   --->   Operation 99 'partselect' 'tmp_24' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 100 [1/1] (0.00ns)   --->   "%trunc_ln12_11 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 384, i32 406" [dma_ps.cpp:12]   --->   Operation 100 'partselect' 'trunc_ln12_11' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_26 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 439, i32 446" [dma_ps.cpp:12]   --->   Operation 101 'partselect' 'tmp_26' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 102 [1/1] (0.00ns)   --->   "%trunc_ln12_12 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 416, i32 438" [dma_ps.cpp:12]   --->   Operation 102 'partselect' 'trunc_ln12_12' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_28 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 471, i32 478" [dma_ps.cpp:12]   --->   Operation 103 'partselect' 'tmp_28' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 104 [1/1] (0.00ns)   --->   "%trunc_ln12_13 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 448, i32 470" [dma_ps.cpp:12]   --->   Operation 104 'partselect' 'trunc_ln12_13' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_30 = partselect i8 @_ssdm_op_PartSelect.i8.i512.i32.i32, i512 %mem_addr_read, i32 503, i32 510" [dma_ps.cpp:12]   --->   Operation 105 'partselect' 'tmp_30' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_10 : Operation 106 [1/1] (0.00ns)   --->   "%trunc_ln12_14 = partselect i23 @_ssdm_op_PartSelect.i23.i512.i32.i32, i512 %mem_addr_read, i32 480, i32 502" [dma_ps.cpp:12]   --->   Operation 106 'partselect' 'trunc_ln12_14' <Predicate = (!icmp_ln5)> <Delay = 0.00>

State 11 <SV = 10> <Delay = 2.78>
ST_11 : Operation 107 [1/1] (0.00ns)   --->   "%bitcast_ln12 = bitcast i32 %trunc_ln8" [dma_ps.cpp:12]   --->   Operation 107 'bitcast' 'bitcast_ln12' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 108 [1/1] (0.76ns)   --->   "%icmp_ln12 = icmp_ne  i8 %tmp, i8 255" [dma_ps.cpp:12]   --->   Operation 108 'icmp' 'icmp_ln12' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 109 [1/1] (0.92ns)   --->   "%icmp_ln12_1 = icmp_eq  i23 %trunc_ln12, i23 0" [dma_ps.cpp:12]   --->   Operation 109 'icmp' 'icmp_ln12_1' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 110 [2/2] (2.78ns)   --->   "%tmp_1 = fcmp_ogt  i32 %bitcast_ln12, i32 0" [dma_ps.cpp:12]   --->   Operation 110 'fcmp' 'tmp_1' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 111 [1/1] (0.00ns)   --->   "%bitcast_ln12_1 = bitcast i32 %trunc_ln8_1" [dma_ps.cpp:12]   --->   Operation 111 'bitcast' 'bitcast_ln12_1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 112 [1/1] (0.76ns)   --->   "%icmp_ln12_2 = icmp_ne  i8 %tmp_2, i8 255" [dma_ps.cpp:12]   --->   Operation 112 'icmp' 'icmp_ln12_2' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 113 [1/1] (0.92ns)   --->   "%icmp_ln12_3 = icmp_eq  i23 %trunc_ln12_1, i23 0" [dma_ps.cpp:12]   --->   Operation 113 'icmp' 'icmp_ln12_3' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 114 [2/2] (2.78ns)   --->   "%tmp_3 = fcmp_ogt  i32 %bitcast_ln12_1, i32 0" [dma_ps.cpp:12]   --->   Operation 114 'fcmp' 'tmp_3' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 115 [1/1] (0.00ns)   --->   "%bitcast_ln12_2 = bitcast i32 %trunc_ln8_2" [dma_ps.cpp:12]   --->   Operation 115 'bitcast' 'bitcast_ln12_2' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 116 [1/1] (0.76ns)   --->   "%icmp_ln12_4 = icmp_ne  i8 %tmp_4, i8 255" [dma_ps.cpp:12]   --->   Operation 116 'icmp' 'icmp_ln12_4' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 117 [1/1] (0.92ns)   --->   "%icmp_ln12_5 = icmp_eq  i23 %trunc_ln12_2, i23 0" [dma_ps.cpp:12]   --->   Operation 117 'icmp' 'icmp_ln12_5' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 118 [2/2] (2.78ns)   --->   "%tmp_5 = fcmp_ogt  i32 %bitcast_ln12_2, i32 0" [dma_ps.cpp:12]   --->   Operation 118 'fcmp' 'tmp_5' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 119 [1/1] (0.00ns)   --->   "%bitcast_ln12_3 = bitcast i32 %trunc_ln8_3" [dma_ps.cpp:12]   --->   Operation 119 'bitcast' 'bitcast_ln12_3' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 120 [1/1] (0.76ns)   --->   "%icmp_ln12_6 = icmp_ne  i8 %tmp_6, i8 255" [dma_ps.cpp:12]   --->   Operation 120 'icmp' 'icmp_ln12_6' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 121 [1/1] (0.92ns)   --->   "%icmp_ln12_7 = icmp_eq  i23 %trunc_ln12_3, i23 0" [dma_ps.cpp:12]   --->   Operation 121 'icmp' 'icmp_ln12_7' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 122 [2/2] (2.78ns)   --->   "%tmp_7 = fcmp_ogt  i32 %bitcast_ln12_3, i32 0" [dma_ps.cpp:12]   --->   Operation 122 'fcmp' 'tmp_7' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 123 [1/1] (0.00ns)   --->   "%bitcast_ln12_4 = bitcast i32 %trunc_ln8_4" [dma_ps.cpp:12]   --->   Operation 123 'bitcast' 'bitcast_ln12_4' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 124 [1/1] (0.76ns)   --->   "%icmp_ln12_8 = icmp_ne  i8 %tmp_8, i8 255" [dma_ps.cpp:12]   --->   Operation 124 'icmp' 'icmp_ln12_8' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 125 [1/1] (0.92ns)   --->   "%icmp_ln12_9 = icmp_eq  i23 %trunc_ln12_4, i23 0" [dma_ps.cpp:12]   --->   Operation 125 'icmp' 'icmp_ln12_9' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 126 [2/2] (2.78ns)   --->   "%tmp_9 = fcmp_ogt  i32 %bitcast_ln12_4, i32 0" [dma_ps.cpp:12]   --->   Operation 126 'fcmp' 'tmp_9' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 127 [1/1] (0.00ns)   --->   "%bitcast_ln12_5 = bitcast i32 %trunc_ln8_5" [dma_ps.cpp:12]   --->   Operation 127 'bitcast' 'bitcast_ln12_5' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 128 [1/1] (0.76ns)   --->   "%icmp_ln12_10 = icmp_ne  i8 %tmp_10, i8 255" [dma_ps.cpp:12]   --->   Operation 128 'icmp' 'icmp_ln12_10' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 129 [1/1] (0.92ns)   --->   "%icmp_ln12_11 = icmp_eq  i23 %trunc_ln12_5, i23 0" [dma_ps.cpp:12]   --->   Operation 129 'icmp' 'icmp_ln12_11' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 130 [2/2] (2.78ns)   --->   "%tmp_11 = fcmp_ogt  i32 %bitcast_ln12_5, i32 0" [dma_ps.cpp:12]   --->   Operation 130 'fcmp' 'tmp_11' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 131 [1/1] (0.00ns)   --->   "%bitcast_ln12_6 = bitcast i32 %trunc_ln8_6" [dma_ps.cpp:12]   --->   Operation 131 'bitcast' 'bitcast_ln12_6' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 132 [1/1] (0.76ns)   --->   "%icmp_ln12_12 = icmp_ne  i8 %tmp_12, i8 255" [dma_ps.cpp:12]   --->   Operation 132 'icmp' 'icmp_ln12_12' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 133 [1/1] (0.92ns)   --->   "%icmp_ln12_13 = icmp_eq  i23 %trunc_ln12_6, i23 0" [dma_ps.cpp:12]   --->   Operation 133 'icmp' 'icmp_ln12_13' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 134 [2/2] (2.78ns)   --->   "%tmp_13 = fcmp_ogt  i32 %bitcast_ln12_6, i32 0" [dma_ps.cpp:12]   --->   Operation 134 'fcmp' 'tmp_13' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 135 [1/1] (0.00ns)   --->   "%bitcast_ln12_7 = bitcast i32 %trunc_ln8_7" [dma_ps.cpp:12]   --->   Operation 135 'bitcast' 'bitcast_ln12_7' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 136 [1/1] (0.76ns)   --->   "%icmp_ln12_14 = icmp_ne  i8 %tmp_14, i8 255" [dma_ps.cpp:12]   --->   Operation 136 'icmp' 'icmp_ln12_14' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 137 [1/1] (0.92ns)   --->   "%icmp_ln12_15 = icmp_eq  i23 %trunc_ln12_7, i23 0" [dma_ps.cpp:12]   --->   Operation 137 'icmp' 'icmp_ln12_15' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 138 [2/2] (2.78ns)   --->   "%tmp_15 = fcmp_ogt  i32 %bitcast_ln12_7, i32 0" [dma_ps.cpp:12]   --->   Operation 138 'fcmp' 'tmp_15' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 139 [1/1] (0.00ns)   --->   "%bitcast_ln12_8 = bitcast i32 %trunc_ln8_8" [dma_ps.cpp:12]   --->   Operation 139 'bitcast' 'bitcast_ln12_8' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 140 [1/1] (0.76ns)   --->   "%icmp_ln12_16 = icmp_ne  i8 %tmp_16, i8 255" [dma_ps.cpp:12]   --->   Operation 140 'icmp' 'icmp_ln12_16' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 141 [1/1] (0.92ns)   --->   "%icmp_ln12_17 = icmp_eq  i23 %trunc_ln12_8, i23 0" [dma_ps.cpp:12]   --->   Operation 141 'icmp' 'icmp_ln12_17' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 142 [2/2] (2.78ns)   --->   "%tmp_17 = fcmp_ogt  i32 %bitcast_ln12_8, i32 0" [dma_ps.cpp:12]   --->   Operation 142 'fcmp' 'tmp_17' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 143 [1/1] (0.00ns)   --->   "%bitcast_ln12_9 = bitcast i32 %trunc_ln8_9" [dma_ps.cpp:12]   --->   Operation 143 'bitcast' 'bitcast_ln12_9' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 144 [1/1] (0.76ns)   --->   "%icmp_ln12_18 = icmp_ne  i8 %tmp_18, i8 255" [dma_ps.cpp:12]   --->   Operation 144 'icmp' 'icmp_ln12_18' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 145 [1/1] (0.92ns)   --->   "%icmp_ln12_19 = icmp_eq  i23 %trunc_ln12_9, i23 0" [dma_ps.cpp:12]   --->   Operation 145 'icmp' 'icmp_ln12_19' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 146 [2/2] (2.78ns)   --->   "%tmp_19 = fcmp_ogt  i32 %bitcast_ln12_9, i32 0" [dma_ps.cpp:12]   --->   Operation 146 'fcmp' 'tmp_19' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 147 [1/1] (0.00ns)   --->   "%bitcast_ln12_10 = bitcast i32 %trunc_ln8_10" [dma_ps.cpp:12]   --->   Operation 147 'bitcast' 'bitcast_ln12_10' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 148 [1/1] (0.76ns)   --->   "%icmp_ln12_20 = icmp_ne  i8 %tmp_20, i8 255" [dma_ps.cpp:12]   --->   Operation 148 'icmp' 'icmp_ln12_20' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 149 [1/1] (0.92ns)   --->   "%icmp_ln12_21 = icmp_eq  i23 %trunc_ln12_s, i23 0" [dma_ps.cpp:12]   --->   Operation 149 'icmp' 'icmp_ln12_21' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 150 [2/2] (2.78ns)   --->   "%tmp_21 = fcmp_ogt  i32 %bitcast_ln12_10, i32 0" [dma_ps.cpp:12]   --->   Operation 150 'fcmp' 'tmp_21' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 151 [1/1] (0.00ns)   --->   "%bitcast_ln12_11 = bitcast i32 %trunc_ln8_11" [dma_ps.cpp:12]   --->   Operation 151 'bitcast' 'bitcast_ln12_11' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 152 [1/1] (0.76ns)   --->   "%icmp_ln12_22 = icmp_ne  i8 %tmp_22, i8 255" [dma_ps.cpp:12]   --->   Operation 152 'icmp' 'icmp_ln12_22' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 153 [1/1] (0.92ns)   --->   "%icmp_ln12_23 = icmp_eq  i23 %trunc_ln12_10, i23 0" [dma_ps.cpp:12]   --->   Operation 153 'icmp' 'icmp_ln12_23' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 154 [2/2] (2.78ns)   --->   "%tmp_23 = fcmp_ogt  i32 %bitcast_ln12_11, i32 0" [dma_ps.cpp:12]   --->   Operation 154 'fcmp' 'tmp_23' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 155 [1/1] (0.00ns)   --->   "%bitcast_ln12_12 = bitcast i32 %trunc_ln8_12" [dma_ps.cpp:12]   --->   Operation 155 'bitcast' 'bitcast_ln12_12' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 156 [1/1] (0.76ns)   --->   "%icmp_ln12_24 = icmp_ne  i8 %tmp_24, i8 255" [dma_ps.cpp:12]   --->   Operation 156 'icmp' 'icmp_ln12_24' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 157 [1/1] (0.92ns)   --->   "%icmp_ln12_25 = icmp_eq  i23 %trunc_ln12_11, i23 0" [dma_ps.cpp:12]   --->   Operation 157 'icmp' 'icmp_ln12_25' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 158 [2/2] (2.78ns)   --->   "%tmp_25 = fcmp_ogt  i32 %bitcast_ln12_12, i32 0" [dma_ps.cpp:12]   --->   Operation 158 'fcmp' 'tmp_25' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 159 [1/1] (0.00ns)   --->   "%bitcast_ln12_13 = bitcast i32 %trunc_ln8_13" [dma_ps.cpp:12]   --->   Operation 159 'bitcast' 'bitcast_ln12_13' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 160 [1/1] (0.76ns)   --->   "%icmp_ln12_26 = icmp_ne  i8 %tmp_26, i8 255" [dma_ps.cpp:12]   --->   Operation 160 'icmp' 'icmp_ln12_26' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 161 [1/1] (0.92ns)   --->   "%icmp_ln12_27 = icmp_eq  i23 %trunc_ln12_12, i23 0" [dma_ps.cpp:12]   --->   Operation 161 'icmp' 'icmp_ln12_27' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 162 [2/2] (2.78ns)   --->   "%tmp_27 = fcmp_ogt  i32 %bitcast_ln12_13, i32 0" [dma_ps.cpp:12]   --->   Operation 162 'fcmp' 'tmp_27' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 163 [1/1] (0.00ns)   --->   "%bitcast_ln12_14 = bitcast i32 %trunc_ln8_14" [dma_ps.cpp:12]   --->   Operation 163 'bitcast' 'bitcast_ln12_14' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 164 [1/1] (0.76ns)   --->   "%icmp_ln12_28 = icmp_ne  i8 %tmp_28, i8 255" [dma_ps.cpp:12]   --->   Operation 164 'icmp' 'icmp_ln12_28' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 165 [1/1] (0.92ns)   --->   "%icmp_ln12_29 = icmp_eq  i23 %trunc_ln12_13, i23 0" [dma_ps.cpp:12]   --->   Operation 165 'icmp' 'icmp_ln12_29' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 166 [2/2] (2.78ns)   --->   "%tmp_29 = fcmp_ogt  i32 %bitcast_ln12_14, i32 0" [dma_ps.cpp:12]   --->   Operation 166 'fcmp' 'tmp_29' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 167 [1/1] (0.00ns)   --->   "%bitcast_ln12_15 = bitcast i32 %trunc_ln8_15" [dma_ps.cpp:12]   --->   Operation 167 'bitcast' 'bitcast_ln12_15' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_11 : Operation 168 [1/1] (0.76ns)   --->   "%icmp_ln12_30 = icmp_ne  i8 %tmp_30, i8 255" [dma_ps.cpp:12]   --->   Operation 168 'icmp' 'icmp_ln12_30' <Predicate = (!icmp_ln5)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 169 [1/1] (0.92ns)   --->   "%icmp_ln12_31 = icmp_eq  i23 %trunc_ln12_14, i23 0" [dma_ps.cpp:12]   --->   Operation 169 'icmp' 'icmp_ln12_31' <Predicate = (!icmp_ln5)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 170 [2/2] (2.78ns)   --->   "%tmp_s = fcmp_ogt  i32 %bitcast_ln12_15, i32 0" [dma_ps.cpp:12]   --->   Operation 170 'fcmp' 'tmp_s' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.20>
ST_12 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node select_ln12)   --->   "%or_ln12 = or i1 %icmp_ln12_1, i1 %icmp_ln12" [dma_ps.cpp:12]   --->   Operation 171 'or' 'or_ln12' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 172 [1/2] (2.78ns)   --->   "%tmp_1 = fcmp_ogt  i32 %bitcast_ln12, i32 0" [dma_ps.cpp:12]   --->   Operation 172 'fcmp' 'tmp_1' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 173 [1/1] (0.00ns) (grouped into LUT with out node select_ln12)   --->   "%and_ln12 = and i1 %or_ln12, i1 %tmp_1" [dma_ps.cpp:12]   --->   Operation 173 'and' 'and_ln12' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 174 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12 = select i1 %and_ln12, i32 %trunc_ln8, i32 0" [dma_ps.cpp:12]   --->   Operation 174 'select' 'select_ln12' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_1)   --->   "%or_ln12_1 = or i1 %icmp_ln12_3, i1 %icmp_ln12_2" [dma_ps.cpp:12]   --->   Operation 175 'or' 'or_ln12_1' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 176 [1/2] (2.78ns)   --->   "%tmp_3 = fcmp_ogt  i32 %bitcast_ln12_1, i32 0" [dma_ps.cpp:12]   --->   Operation 176 'fcmp' 'tmp_3' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_1)   --->   "%and_ln12_1 = and i1 %or_ln12_1, i1 %tmp_3" [dma_ps.cpp:12]   --->   Operation 177 'and' 'and_ln12_1' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 178 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_1 = select i1 %and_ln12_1, i32 %trunc_ln8_1, i32 0" [dma_ps.cpp:12]   --->   Operation 178 'select' 'select_ln12_1' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_2)   --->   "%or_ln12_2 = or i1 %icmp_ln12_5, i1 %icmp_ln12_4" [dma_ps.cpp:12]   --->   Operation 179 'or' 'or_ln12_2' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 180 [1/2] (2.78ns)   --->   "%tmp_5 = fcmp_ogt  i32 %bitcast_ln12_2, i32 0" [dma_ps.cpp:12]   --->   Operation 180 'fcmp' 'tmp_5' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_2)   --->   "%and_ln12_2 = and i1 %or_ln12_2, i1 %tmp_5" [dma_ps.cpp:12]   --->   Operation 181 'and' 'and_ln12_2' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 182 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_2 = select i1 %and_ln12_2, i32 %trunc_ln8_2, i32 0" [dma_ps.cpp:12]   --->   Operation 182 'select' 'select_ln12_2' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_3)   --->   "%or_ln12_3 = or i1 %icmp_ln12_7, i1 %icmp_ln12_6" [dma_ps.cpp:12]   --->   Operation 183 'or' 'or_ln12_3' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 184 [1/2] (2.78ns)   --->   "%tmp_7 = fcmp_ogt  i32 %bitcast_ln12_3, i32 0" [dma_ps.cpp:12]   --->   Operation 184 'fcmp' 'tmp_7' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_3)   --->   "%and_ln12_3 = and i1 %or_ln12_3, i1 %tmp_7" [dma_ps.cpp:12]   --->   Operation 185 'and' 'and_ln12_3' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 186 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_3 = select i1 %and_ln12_3, i32 %trunc_ln8_3, i32 0" [dma_ps.cpp:12]   --->   Operation 186 'select' 'select_ln12_3' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_4)   --->   "%or_ln12_4 = or i1 %icmp_ln12_9, i1 %icmp_ln12_8" [dma_ps.cpp:12]   --->   Operation 187 'or' 'or_ln12_4' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 188 [1/2] (2.78ns)   --->   "%tmp_9 = fcmp_ogt  i32 %bitcast_ln12_4, i32 0" [dma_ps.cpp:12]   --->   Operation 188 'fcmp' 'tmp_9' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 189 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_4)   --->   "%and_ln12_4 = and i1 %or_ln12_4, i1 %tmp_9" [dma_ps.cpp:12]   --->   Operation 189 'and' 'and_ln12_4' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 190 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_4 = select i1 %and_ln12_4, i32 %trunc_ln8_4, i32 0" [dma_ps.cpp:12]   --->   Operation 190 'select' 'select_ln12_4' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_5)   --->   "%or_ln12_5 = or i1 %icmp_ln12_11, i1 %icmp_ln12_10" [dma_ps.cpp:12]   --->   Operation 191 'or' 'or_ln12_5' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 192 [1/2] (2.78ns)   --->   "%tmp_11 = fcmp_ogt  i32 %bitcast_ln12_5, i32 0" [dma_ps.cpp:12]   --->   Operation 192 'fcmp' 'tmp_11' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_5)   --->   "%and_ln12_5 = and i1 %or_ln12_5, i1 %tmp_11" [dma_ps.cpp:12]   --->   Operation 193 'and' 'and_ln12_5' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 194 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_5 = select i1 %and_ln12_5, i32 %trunc_ln8_5, i32 0" [dma_ps.cpp:12]   --->   Operation 194 'select' 'select_ln12_5' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_6)   --->   "%or_ln12_6 = or i1 %icmp_ln12_13, i1 %icmp_ln12_12" [dma_ps.cpp:12]   --->   Operation 195 'or' 'or_ln12_6' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 196 [1/2] (2.78ns)   --->   "%tmp_13 = fcmp_ogt  i32 %bitcast_ln12_6, i32 0" [dma_ps.cpp:12]   --->   Operation 196 'fcmp' 'tmp_13' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_6)   --->   "%and_ln12_6 = and i1 %or_ln12_6, i1 %tmp_13" [dma_ps.cpp:12]   --->   Operation 197 'and' 'and_ln12_6' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 198 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_6 = select i1 %and_ln12_6, i32 %trunc_ln8_6, i32 0" [dma_ps.cpp:12]   --->   Operation 198 'select' 'select_ln12_6' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_7)   --->   "%or_ln12_7 = or i1 %icmp_ln12_15, i1 %icmp_ln12_14" [dma_ps.cpp:12]   --->   Operation 199 'or' 'or_ln12_7' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 200 [1/2] (2.78ns)   --->   "%tmp_15 = fcmp_ogt  i32 %bitcast_ln12_7, i32 0" [dma_ps.cpp:12]   --->   Operation 200 'fcmp' 'tmp_15' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_7)   --->   "%and_ln12_7 = and i1 %or_ln12_7, i1 %tmp_15" [dma_ps.cpp:12]   --->   Operation 201 'and' 'and_ln12_7' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 202 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_7 = select i1 %and_ln12_7, i32 %trunc_ln8_7, i32 0" [dma_ps.cpp:12]   --->   Operation 202 'select' 'select_ln12_7' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_8)   --->   "%or_ln12_8 = or i1 %icmp_ln12_17, i1 %icmp_ln12_16" [dma_ps.cpp:12]   --->   Operation 203 'or' 'or_ln12_8' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 204 [1/2] (2.78ns)   --->   "%tmp_17 = fcmp_ogt  i32 %bitcast_ln12_8, i32 0" [dma_ps.cpp:12]   --->   Operation 204 'fcmp' 'tmp_17' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_8)   --->   "%and_ln12_8 = and i1 %or_ln12_8, i1 %tmp_17" [dma_ps.cpp:12]   --->   Operation 205 'and' 'and_ln12_8' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 206 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_8 = select i1 %and_ln12_8, i32 %trunc_ln8_8, i32 0" [dma_ps.cpp:12]   --->   Operation 206 'select' 'select_ln12_8' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_9)   --->   "%or_ln12_9 = or i1 %icmp_ln12_19, i1 %icmp_ln12_18" [dma_ps.cpp:12]   --->   Operation 207 'or' 'or_ln12_9' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 208 [1/2] (2.78ns)   --->   "%tmp_19 = fcmp_ogt  i32 %bitcast_ln12_9, i32 0" [dma_ps.cpp:12]   --->   Operation 208 'fcmp' 'tmp_19' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 209 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_9)   --->   "%and_ln12_9 = and i1 %or_ln12_9, i1 %tmp_19" [dma_ps.cpp:12]   --->   Operation 209 'and' 'and_ln12_9' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 210 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_9 = select i1 %and_ln12_9, i32 %trunc_ln8_9, i32 0" [dma_ps.cpp:12]   --->   Operation 210 'select' 'select_ln12_9' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 211 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_10)   --->   "%or_ln12_10 = or i1 %icmp_ln12_21, i1 %icmp_ln12_20" [dma_ps.cpp:12]   --->   Operation 211 'or' 'or_ln12_10' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 212 [1/2] (2.78ns)   --->   "%tmp_21 = fcmp_ogt  i32 %bitcast_ln12_10, i32 0" [dma_ps.cpp:12]   --->   Operation 212 'fcmp' 'tmp_21' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 213 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_10)   --->   "%and_ln12_10 = and i1 %or_ln12_10, i1 %tmp_21" [dma_ps.cpp:12]   --->   Operation 213 'and' 'and_ln12_10' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 214 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_10 = select i1 %and_ln12_10, i32 %trunc_ln8_10, i32 0" [dma_ps.cpp:12]   --->   Operation 214 'select' 'select_ln12_10' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 215 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_11)   --->   "%or_ln12_11 = or i1 %icmp_ln12_23, i1 %icmp_ln12_22" [dma_ps.cpp:12]   --->   Operation 215 'or' 'or_ln12_11' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 216 [1/2] (2.78ns)   --->   "%tmp_23 = fcmp_ogt  i32 %bitcast_ln12_11, i32 0" [dma_ps.cpp:12]   --->   Operation 216 'fcmp' 'tmp_23' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 217 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_11)   --->   "%and_ln12_11 = and i1 %or_ln12_11, i1 %tmp_23" [dma_ps.cpp:12]   --->   Operation 217 'and' 'and_ln12_11' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 218 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_11 = select i1 %and_ln12_11, i32 %trunc_ln8_11, i32 0" [dma_ps.cpp:12]   --->   Operation 218 'select' 'select_ln12_11' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 219 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_12)   --->   "%or_ln12_12 = or i1 %icmp_ln12_25, i1 %icmp_ln12_24" [dma_ps.cpp:12]   --->   Operation 219 'or' 'or_ln12_12' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 220 [1/2] (2.78ns)   --->   "%tmp_25 = fcmp_ogt  i32 %bitcast_ln12_12, i32 0" [dma_ps.cpp:12]   --->   Operation 220 'fcmp' 'tmp_25' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 221 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_12)   --->   "%and_ln12_12 = and i1 %or_ln12_12, i1 %tmp_25" [dma_ps.cpp:12]   --->   Operation 221 'and' 'and_ln12_12' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 222 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_12 = select i1 %and_ln12_12, i32 %trunc_ln8_12, i32 0" [dma_ps.cpp:12]   --->   Operation 222 'select' 'select_ln12_12' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_13)   --->   "%or_ln12_13 = or i1 %icmp_ln12_27, i1 %icmp_ln12_26" [dma_ps.cpp:12]   --->   Operation 223 'or' 'or_ln12_13' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 224 [1/2] (2.78ns)   --->   "%tmp_27 = fcmp_ogt  i32 %bitcast_ln12_13, i32 0" [dma_ps.cpp:12]   --->   Operation 224 'fcmp' 'tmp_27' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_13)   --->   "%and_ln12_13 = and i1 %or_ln12_13, i1 %tmp_27" [dma_ps.cpp:12]   --->   Operation 225 'and' 'and_ln12_13' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 226 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_13 = select i1 %and_ln12_13, i32 %trunc_ln8_13, i32 0" [dma_ps.cpp:12]   --->   Operation 226 'select' 'select_ln12_13' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 227 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_14)   --->   "%or_ln12_14 = or i1 %icmp_ln12_29, i1 %icmp_ln12_28" [dma_ps.cpp:12]   --->   Operation 227 'or' 'or_ln12_14' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 228 [1/2] (2.78ns)   --->   "%tmp_29 = fcmp_ogt  i32 %bitcast_ln12_14, i32 0" [dma_ps.cpp:12]   --->   Operation 228 'fcmp' 'tmp_29' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 229 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_14)   --->   "%and_ln12_14 = and i1 %or_ln12_14, i1 %tmp_29" [dma_ps.cpp:12]   --->   Operation 229 'and' 'and_ln12_14' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 230 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_14 = select i1 %and_ln12_14, i32 %trunc_ln8_14, i32 0" [dma_ps.cpp:12]   --->   Operation 230 'select' 'select_ln12_14' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 231 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_15)   --->   "%or_ln12_15 = or i1 %icmp_ln12_31, i1 %icmp_ln12_30" [dma_ps.cpp:12]   --->   Operation 231 'or' 'or_ln12_15' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 232 [1/2] (2.78ns)   --->   "%tmp_s = fcmp_ogt  i32 %bitcast_ln12_15, i32 0" [dma_ps.cpp:12]   --->   Operation 232 'fcmp' 'tmp_s' <Predicate = (!icmp_ln5)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 233 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_15)   --->   "%and_ln12_15 = and i1 %or_ln12_15, i1 %tmp_s" [dma_ps.cpp:12]   --->   Operation 233 'and' 'and_ln12_15' <Predicate = (!icmp_ln5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 234 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln12_15 = select i1 %and_ln12_15, i32 %trunc_ln8_15, i32 0" [dma_ps.cpp:12]   --->   Operation 234 'select' 'select_ln12_15' <Predicate = (!icmp_ln5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 235 [1/1] (0.00ns)   --->   "%sext_ln15 = sext i58 %trunc_ln6" [dma_ps.cpp:15]   --->   Operation 235 'sext' 'sext_ln15' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_12 : Operation 236 [1/1] (0.00ns)   --->   "%mem_addr_1 = getelementptr i512 %mem, i64 %sext_ln15" [dma_ps.cpp:15]   --->   Operation 236 'getelementptr' 'mem_addr_1' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_12 : Operation 237 [1/1] (7.20ns)   --->   "%mem_addr_3_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i512P1A, i512 %mem_addr_1, i32 1" [dma_ps.cpp:15]   --->   Operation 237 'writereq' 'mem_addr_3_req' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.20>
ST_13 : Operation 238 [1/1] (0.00ns)   --->   "%or_ln15_s = bitconcatenate i512 @_ssdm_op_BitConcatenate.i512.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32, i32 %select_ln12_15, i32 %select_ln12_14, i32 %select_ln12_13, i32 %select_ln12_12, i32 %select_ln12_11, i32 %select_ln12_10, i32 %select_ln12_9, i32 %select_ln12_8, i32 %select_ln12_7, i32 %select_ln12_6, i32 %select_ln12_5, i32 %select_ln12_4, i32 %select_ln12_3, i32 %select_ln12_2, i32 %select_ln12_1, i32 %select_ln12" [dma_ps.cpp:15]   --->   Operation 238 'bitconcatenate' 'or_ln15_s' <Predicate = (!icmp_ln5)> <Delay = 0.00>
ST_13 : Operation 239 [1/1] (7.20ns)   --->   "%write_ln15 = write void @_ssdm_op_Write.m_axi.i512P1A, i512 %mem_addr_1, i512 %or_ln15_s, i64 18446744073709551615" [dma_ps.cpp:15]   --->   Operation 239 'write' 'write_ln15' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.20>
ST_14 : Operation 240 [5/5] (7.20ns)   --->   "%mem_addr_3_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i512P1A, i512 %mem_addr_1" [dma_ps.cpp:15]   --->   Operation 240 'writeresp' 'mem_addr_3_resp' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.20>
ST_15 : Operation 241 [4/5] (7.20ns)   --->   "%mem_addr_3_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i512P1A, i512 %mem_addr_1" [dma_ps.cpp:15]   --->   Operation 241 'writeresp' 'mem_addr_3_resp' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 7.20>
ST_16 : Operation 242 [3/5] (7.20ns)   --->   "%mem_addr_3_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i512P1A, i512 %mem_addr_1" [dma_ps.cpp:15]   --->   Operation 242 'writeresp' 'mem_addr_3_resp' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 7.20>
ST_17 : Operation 243 [2/5] (7.20ns)   --->   "%mem_addr_3_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i512P1A, i512 %mem_addr_1" [dma_ps.cpp:15]   --->   Operation 243 'writeresp' 'mem_addr_3_resp' <Predicate = (!icmp_ln5)> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 7.20>
ST_18 : Operation 244 [1/1] (0.00ns)   --->   "%specpipeline_ln5 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_1" [dma_ps.cpp:5]   --->   Operation 244 'specpipeline' 'specpipeline_ln5' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 245 [1/1] (0.00ns)   --->   "%specloopname_ln5 = specloopname void @_ssdm_op_SpecLoopName, void @empty_15" [dma_ps.cpp:5]   --->   Operation 245 'specloopname' 'specloopname_ln5' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 246 [1/5] (7.20ns)   --->   "%mem_addr_3_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i512P1A, i512 %mem_addr_1" [dma_ps.cpp:15]   --->   Operation 246 'writeresp' 'mem_addr_3_resp' <Predicate = true> <Delay = 7.20> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 247 [1/1] (0.00ns)   --->   "%br_ln5 = br void %LAA" [dma_ps.cpp:5]   --->   Operation 247 'br' 'br_ln5' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.800ns.

 <State 1>: 2.365ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln5', dma_ps.cpp:5) of constant 0 on local variable 'i', dma_ps.cpp:5 [14]  (0.427 ns)
	'load' operation 13 bit ('i', dma_ps.cpp:5) on local variable 'i', dma_ps.cpp:5 [17]  (0.000 ns)
	'add' operation 17 bit ('add_ln8', dma_ps.cpp:8) [26]  (0.853 ns)
	'add' operation 64 bit ('add_ln8_1', dma_ps.cpp:8) [29]  (1.085 ns)

 <State 2>: 7.200ns
The critical path consists of the following:
	'getelementptr' operation 512 bit ('mem_addr', dma_ps.cpp:8) [32]  (0.000 ns)
	bus request operation ('mem_load_req', dma_ps.cpp:8) on port 'mem' (dma_ps.cpp:8) [33]  (7.200 ns)

 <State 3>: 7.200ns
The critical path consists of the following:
	bus request operation ('mem_load_req', dma_ps.cpp:8) on port 'mem' (dma_ps.cpp:8) [33]  (7.200 ns)

 <State 4>: 7.200ns
The critical path consists of the following:
	bus request operation ('mem_load_req', dma_ps.cpp:8) on port 'mem' (dma_ps.cpp:8) [33]  (7.200 ns)

 <State 5>: 7.200ns
The critical path consists of the following:
	bus request operation ('mem_load_req', dma_ps.cpp:8) on port 'mem' (dma_ps.cpp:8) [33]  (7.200 ns)

 <State 6>: 7.200ns
The critical path consists of the following:
	bus request operation ('mem_load_req', dma_ps.cpp:8) on port 'mem' (dma_ps.cpp:8) [33]  (7.200 ns)

 <State 7>: 7.200ns
The critical path consists of the following:
	bus request operation ('mem_load_req', dma_ps.cpp:8) on port 'mem' (dma_ps.cpp:8) [33]  (7.200 ns)

 <State 8>: 7.200ns
The critical path consists of the following:
	bus request operation ('mem_load_req', dma_ps.cpp:8) on port 'mem' (dma_ps.cpp:8) [33]  (7.200 ns)

 <State 9>: 7.200ns
The critical path consists of the following:
	bus request operation ('mem_load_req', dma_ps.cpp:8) on port 'mem' (dma_ps.cpp:8) [33]  (7.200 ns)

 <State 10>: 7.200ns
The critical path consists of the following:
	bus read operation ('mem_addr_read', dma_ps.cpp:8) on port 'mem' (dma_ps.cpp:8) [34]  (7.200 ns)

 <State 11>: 2.782ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_1', dma_ps.cpp:12) [57]  (2.782 ns)

 <State 12>: 7.200ns
The critical path consists of the following:
	'getelementptr' operation 512 bit ('mem_addr_1', dma_ps.cpp:15) [202]  (0.000 ns)
	bus request operation ('mem_addr_3_req', dma_ps.cpp:15) on port 'mem' (dma_ps.cpp:15) [203]  (7.200 ns)

 <State 13>: 7.200ns
The critical path consists of the following:
	bus write operation ('write_ln15', dma_ps.cpp:15) on port 'mem' (dma_ps.cpp:15) [204]  (7.200 ns)

 <State 14>: 7.200ns
The critical path consists of the following:
	bus response operation ('mem_addr_3_resp', dma_ps.cpp:15) on port 'mem' (dma_ps.cpp:15) [205]  (7.200 ns)

 <State 15>: 7.200ns
The critical path consists of the following:
	bus response operation ('mem_addr_3_resp', dma_ps.cpp:15) on port 'mem' (dma_ps.cpp:15) [205]  (7.200 ns)

 <State 16>: 7.200ns
The critical path consists of the following:
	bus response operation ('mem_addr_3_resp', dma_ps.cpp:15) on port 'mem' (dma_ps.cpp:15) [205]  (7.200 ns)

 <State 17>: 7.200ns
The critical path consists of the following:
	bus response operation ('mem_addr_3_resp', dma_ps.cpp:15) on port 'mem' (dma_ps.cpp:15) [205]  (7.200 ns)

 <State 18>: 7.200ns
The critical path consists of the following:
	bus response operation ('mem_addr_3_resp', dma_ps.cpp:15) on port 'mem' (dma_ps.cpp:15) [205]  (7.200 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
